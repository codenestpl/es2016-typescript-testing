/*
ES6 - Functions
*/
"use strict"  

//Example − Anonymous Parameterized Function
var func = function(x,y){ return x*y }; 
function product() { 
   var result; 
   result = func(10,20); 
   console.log("The product : "+result) 
} 
product()

var func2 = new Function("x", "y", "return x*y;"); 
function product2() { 
   var result; 
   result = func2(20,20); 
   console.log("The product : "+result)
} 
product2()

//Example − Lambda Expression
var foo = (x)=>10+x 
console.log(foo(10)) 

var msg = ()=> { 
   console.log("function invoked") 
} 
msg() 

//Function Hoisting
hoist_function();  
function hoist_function() { 
   console.log("foo"); 
} 

//Generator Functions
function* rainbow() { 
   // the asterisk marks this as a generator 
   yield 'red'; 
   yield 'orange'; 
   yield 'yellow'; 
   yield 'green'; 
   yield 'blue'; 
   yield 'indigo'; 
   yield 'violet'; 
} 
for(let color of rainbow()) { 
   console.log(color); 
} 

function* ask() { 
   const name = yield "What is your name?"; 
   const sport = yield "What is your favorite sport?"; 
   return `${name}'s favorite sport is ${sport}`; 
}  
const it = ask(); 
console.log(it.next()); 
console.log(it.next('Ethan'));  
console.log(it.next('Cricket')); 